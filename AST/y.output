Grammar

    0 $accept: program $end

    1 program: CLASS ID '{' BODY '}'

    2 BODY: access_specifier STATIC type_const MAIN '(' type_const '[' ']' ID ')' stmt

    3 stmt: ';'
    4     | expr ';'
    5     | PRINT expr ';'
    6     | VARIABLE '=' expr ';'
    7     | WHILE '(' expr ')' stmt
    8     | FOR '(' stmt stmt expr ')' stmt
    9     | IF '(' expr ')' stmt
   10     | IF '(' expr ')' stmt ELSE stmt
   11     | '{' stmt_list '}'
   12     | INT expr ';'
   13     | FLOAT expr ';'
   14     | CHAR expr ';'

   15 stmt_list: stmt
   16          | stmt_list stmt

   17 expr: INTEGER
   18     | VARIABLE
   19     | '-' expr
   20     | expr INC
   21     | expr DEC
   22     | expr '+' expr
   23     | expr '-' expr
   24     | expr '*' expr
   25     | expr '/' expr
   26     | expr '<' expr
   27     | expr '>' expr
   28     | expr GE expr
   29     | expr LE expr
   30     | expr NE expr
   31     | expr EQ expr
   32     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 2 7 8 9 10 32
')' (41) 2 7 8 9 10 32
'*' (42) 24
'+' (43) 22
'-' (45) 19 23
'/' (47) 25
';' (59) 3 4 5 6 12 13 14
'<' (60) 26
'=' (61) 6
'>' (62) 27
'[' (91) 2
']' (93) 2
'{' (123) 1 11
'}' (125) 1 11
error (256)
INTEGER (258) 17
STATIC (259) 2
MAIN (260) 2
CLASS (261) 1
access_specifier (262) 2
ID (263) 1 2
type_const (264) 2
VARIABLE (265) 6 18
WHILE (266) 7
IF (267) 9 10
PRINT (268) 5
FOR (269) 8
INT (270) 12
FLOAT (271) 13
CHAR (272) 14
IFX (273)
ELSE (274) 10
GE (275) 28
LE (276) 29
EQ (277) 31
NE (278) 30
UMINUS (279)
INC (280) 20
DEC (281) 21


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
program (42)
    on left: 1, on right: 0
BODY (43)
    on left: 2, on right: 1
stmt (44)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14, on right: 2 7 8 9 10 15
    16
stmt_list (45)
    on left: 15 16, on right: 11 16
expr (46)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32, on right:
    4 5 6 7 8 9 10 12 13 14 19 20 21 22 23 24 25 26 27 28 29 30 31
    32


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program  go to state 2


State 1

    1 program: CLASS . ID '{' BODY '}'

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: CLASS ID . '{' BODY '}'

    '{'  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: CLASS ID '{' . BODY '}'

    access_specifier  shift, and go to state 6

    BODY  go to state 7


State 6

    2 BODY: access_specifier . STATIC type_const MAIN '(' type_const '[' ']' ID ')' stmt

    STATIC  shift, and go to state 8


State 7

    1 program: CLASS ID '{' BODY . '}'

    '}'  shift, and go to state 9


State 8

    2 BODY: access_specifier STATIC . type_const MAIN '(' type_const '[' ']' ID ')' stmt

    type_const  shift, and go to state 10


State 9

    1 program: CLASS ID '{' BODY '}' .

    $default  reduce using rule 1 (program)


State 10

    2 BODY: access_specifier STATIC type_const . MAIN '(' type_const '[' ']' ID ')' stmt

    MAIN  shift, and go to state 11


State 11

    2 BODY: access_specifier STATIC type_const MAIN . '(' type_const '[' ']' ID ')' stmt

    '('  shift, and go to state 12


State 12

    2 BODY: access_specifier STATIC type_const MAIN '(' . type_const '[' ']' ID ')' stmt

    type_const  shift, and go to state 13


State 13

    2 BODY: access_specifier STATIC type_const MAIN '(' type_const . '[' ']' ID ')' stmt

    '['  shift, and go to state 14


State 14

    2 BODY: access_specifier STATIC type_const MAIN '(' type_const '[' . ']' ID ')' stmt

    ']'  shift, and go to state 15


State 15

    2 BODY: access_specifier STATIC type_const MAIN '(' type_const '[' ']' . ID ')' stmt

    ID  shift, and go to state 16


State 16

    2 BODY: access_specifier STATIC type_const MAIN '(' type_const '[' ']' ID . ')' stmt

    ')'  shift, and go to state 17


State 17

    2 BODY: access_specifier STATIC type_const MAIN '(' type_const '[' ']' ID ')' . stmt

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    WHILE     shift, and go to state 20
    IF        shift, and go to state 21
    PRINT     shift, and go to state 22
    FOR       shift, and go to state 23
    INT       shift, and go to state 24
    FLOAT     shift, and go to state 25
    CHAR      shift, and go to state 26
    '-'       shift, and go to state 27
    '{'       shift, and go to state 28
    '('       shift, and go to state 29
    ';'       shift, and go to state 30

    stmt  go to state 31
    expr  go to state 32


State 18

   17 expr: INTEGER .

    $default  reduce using rule 17 (expr)


State 19

    6 stmt: VARIABLE . '=' expr ';'
   18 expr: VARIABLE .

    '='  shift, and go to state 33

    $default  reduce using rule 18 (expr)


State 20

    7 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 34


State 21

    9 stmt: IF . '(' expr ')' stmt
   10     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 35


State 22

    5 stmt: PRINT . expr ';'

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 36
    '-'       shift, and go to state 27
    '('       shift, and go to state 29

    expr  go to state 37


State 23

    8 stmt: FOR . '(' stmt stmt expr ')' stmt

    '('  shift, and go to state 38


State 24

   12 stmt: INT . expr ';'

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 36
    '-'       shift, and go to state 27
    '('       shift, and go to state 29

    expr  go to state 39


State 25

   13 stmt: FLOAT . expr ';'

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 36
    '-'       shift, and go to state 27
    '('       shift, and go to state 29

    expr  go to state 40


State 26

   14 stmt: CHAR . expr ';'

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 36
    '-'       shift, and go to state 27
    '('       shift, and go to state 29

    expr  go to state 41


State 27

   19 expr: '-' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 36
    '-'       shift, and go to state 27
    '('       shift, and go to state 29

    expr  go to state 42


State 28

   11 stmt: '{' . stmt_list '}'

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    WHILE     shift, and go to state 20
    IF        shift, and go to state 21
    PRINT     shift, and go to state 22
    FOR       shift, and go to state 23
    INT       shift, and go to state 24
    FLOAT     shift, and go to state 25
    CHAR      shift, and go to state 26
    '-'       shift, and go to state 27
    '{'       shift, and go to state 28
    '('       shift, and go to state 29
    ';'       shift, and go to state 30

    stmt       go to state 43
    stmt_list  go to state 44
    expr       go to state 32


State 29

   32 expr: '(' . expr ')'

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 36
    '-'       shift, and go to state 27
    '('       shift, and go to state 29

    expr  go to state 45


State 30

    3 stmt: ';' .

    $default  reduce using rule 3 (stmt)


State 31

    2 BODY: access_specifier STATIC type_const MAIN '(' type_const '[' ']' ID ')' stmt .

    $default  reduce using rule 2 (BODY)


State 32

    4 stmt: expr . ';'
   20 expr: expr . INC
   21     | expr . DEC
   22     | expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    GE   shift, and go to state 46
    LE   shift, and go to state 47
    EQ   shift, and go to state 48
    NE   shift, and go to state 49
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    INC  shift, and go to state 56
    DEC  shift, and go to state 57
    ';'  shift, and go to state 58


State 33

    6 stmt: VARIABLE '=' . expr ';'

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 36
    '-'       shift, and go to state 27
    '('       shift, and go to state 29

    expr  go to state 59


State 34

    7 stmt: WHILE '(' . expr ')' stmt

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 36
    '-'       shift, and go to state 27
    '('       shift, and go to state 29

    expr  go to state 60


State 35

    9 stmt: IF '(' . expr ')' stmt
   10     | IF '(' . expr ')' stmt ELSE stmt

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 36
    '-'       shift, and go to state 27
    '('       shift, and go to state 29

    expr  go to state 61


State 36

   18 expr: VARIABLE .

    $default  reduce using rule 18 (expr)


State 37

    5 stmt: PRINT expr . ';'
   20 expr: expr . INC
   21     | expr . DEC
   22     | expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    GE   shift, and go to state 46
    LE   shift, and go to state 47
    EQ   shift, and go to state 48
    NE   shift, and go to state 49
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    INC  shift, and go to state 56
    DEC  shift, and go to state 57
    ';'  shift, and go to state 62


State 38

    8 stmt: FOR '(' . stmt stmt expr ')' stmt

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    WHILE     shift, and go to state 20
    IF        shift, and go to state 21
    PRINT     shift, and go to state 22
    FOR       shift, and go to state 23
    INT       shift, and go to state 24
    FLOAT     shift, and go to state 25
    CHAR      shift, and go to state 26
    '-'       shift, and go to state 27
    '{'       shift, and go to state 28
    '('       shift, and go to state 29
    ';'       shift, and go to state 30

    stmt  go to state 63
    expr  go to state 32


State 39

   12 stmt: INT expr . ';'
   20 expr: expr . INC
   21     | expr . DEC
   22     | expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    GE   shift, and go to state 46
    LE   shift, and go to state 47
    EQ   shift, and go to state 48
    NE   shift, and go to state 49
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    INC  shift, and go to state 56
    DEC  shift, and go to state 57
    ';'  shift, and go to state 64


State 40

   13 stmt: FLOAT expr . ';'
   20 expr: expr . INC
   21     | expr . DEC
   22     | expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    GE   shift, and go to state 46
    LE   shift, and go to state 47
    EQ   shift, and go to state 48
    NE   shift, and go to state 49
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    INC  shift, and go to state 56
    DEC  shift, and go to state 57
    ';'  shift, and go to state 65


State 41

   14 stmt: CHAR expr . ';'
   20 expr: expr . INC
   21     | expr . DEC
   22     | expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    GE   shift, and go to state 46
    LE   shift, and go to state 47
    EQ   shift, and go to state 48
    NE   shift, and go to state 49
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    INC  shift, and go to state 56
    DEC  shift, and go to state 57
    ';'  shift, and go to state 66


State 42

   19 expr: '-' expr .
   20     | expr . INC
   21     | expr . DEC
   22     | expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    INC  error (nonassociative)
    DEC  error (nonassociative)

    $default  reduce using rule 19 (expr)


State 43

   15 stmt_list: stmt .

    $default  reduce using rule 15 (stmt_list)


State 44

   11 stmt: '{' stmt_list . '}'
   16 stmt_list: stmt_list . stmt

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    WHILE     shift, and go to state 20
    IF        shift, and go to state 21
    PRINT     shift, and go to state 22
    FOR       shift, and go to state 23
    INT       shift, and go to state 24
    FLOAT     shift, and go to state 25
    CHAR      shift, and go to state 26
    '-'       shift, and go to state 27
    '{'       shift, and go to state 28
    '}'       shift, and go to state 67
    '('       shift, and go to state 29
    ';'       shift, and go to state 30

    stmt  go to state 68
    expr  go to state 32


State 45

   20 expr: expr . INC
   21     | expr . DEC
   22     | expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr
   32     | '(' expr . ')'

    GE   shift, and go to state 46
    LE   shift, and go to state 47
    EQ   shift, and go to state 48
    NE   shift, and go to state 49
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    INC  shift, and go to state 56
    DEC  shift, and go to state 57
    ')'  shift, and go to state 69


State 46

   28 expr: expr GE . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 36
    '-'       shift, and go to state 27
    '('       shift, and go to state 29

    expr  go to state 70


State 47

   29 expr: expr LE . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 36
    '-'       shift, and go to state 27
    '('       shift, and go to state 29

    expr  go to state 71


State 48

   31 expr: expr EQ . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 36
    '-'       shift, and go to state 27
    '('       shift, and go to state 29

    expr  go to state 72


State 49

   30 expr: expr NE . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 36
    '-'       shift, and go to state 27
    '('       shift, and go to state 29

    expr  go to state 73


State 50

   27 expr: expr '>' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 36
    '-'       shift, and go to state 27
    '('       shift, and go to state 29

    expr  go to state 74


State 51

   26 expr: expr '<' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 36
    '-'       shift, and go to state 27
    '('       shift, and go to state 29

    expr  go to state 75


State 52

   22 expr: expr '+' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 36
    '-'       shift, and go to state 27
    '('       shift, and go to state 29

    expr  go to state 76


State 53

   23 expr: expr '-' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 36
    '-'       shift, and go to state 27
    '('       shift, and go to state 29

    expr  go to state 77


State 54

   24 expr: expr '*' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 36
    '-'       shift, and go to state 27
    '('       shift, and go to state 29

    expr  go to state 78


State 55

   25 expr: expr '/' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 36
    '-'       shift, and go to state 27
    '('       shift, and go to state 29

    expr  go to state 79


State 56

   20 expr: expr INC .

    $default  reduce using rule 20 (expr)


State 57

   21 expr: expr DEC .

    $default  reduce using rule 21 (expr)


State 58

    4 stmt: expr ';' .

    $default  reduce using rule 4 (stmt)


State 59

    6 stmt: VARIABLE '=' expr . ';'
   20 expr: expr . INC
   21     | expr . DEC
   22     | expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    GE   shift, and go to state 46
    LE   shift, and go to state 47
    EQ   shift, and go to state 48
    NE   shift, and go to state 49
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    INC  shift, and go to state 56
    DEC  shift, and go to state 57
    ';'  shift, and go to state 80


State 60

    7 stmt: WHILE '(' expr . ')' stmt
   20 expr: expr . INC
   21     | expr . DEC
   22     | expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    GE   shift, and go to state 46
    LE   shift, and go to state 47
    EQ   shift, and go to state 48
    NE   shift, and go to state 49
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    INC  shift, and go to state 56
    DEC  shift, and go to state 57
    ')'  shift, and go to state 81


State 61

    9 stmt: IF '(' expr . ')' stmt
   10     | IF '(' expr . ')' stmt ELSE stmt
   20 expr: expr . INC
   21     | expr . DEC
   22     | expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    GE   shift, and go to state 46
    LE   shift, and go to state 47
    EQ   shift, and go to state 48
    NE   shift, and go to state 49
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    INC  shift, and go to state 56
    DEC  shift, and go to state 57
    ')'  shift, and go to state 82


State 62

    5 stmt: PRINT expr ';' .

    $default  reduce using rule 5 (stmt)


State 63

    8 stmt: FOR '(' stmt . stmt expr ')' stmt

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    WHILE     shift, and go to state 20
    IF        shift, and go to state 21
    PRINT     shift, and go to state 22
    FOR       shift, and go to state 23
    INT       shift, and go to state 24
    FLOAT     shift, and go to state 25
    CHAR      shift, and go to state 26
    '-'       shift, and go to state 27
    '{'       shift, and go to state 28
    '('       shift, and go to state 29
    ';'       shift, and go to state 30

    stmt  go to state 83
    expr  go to state 32


State 64

   12 stmt: INT expr ';' .

    $default  reduce using rule 12 (stmt)


State 65

   13 stmt: FLOAT expr ';' .

    $default  reduce using rule 13 (stmt)


State 66

   14 stmt: CHAR expr ';' .

    $default  reduce using rule 14 (stmt)


State 67

   11 stmt: '{' stmt_list '}' .

    $default  reduce using rule 11 (stmt)


State 68

   16 stmt_list: stmt_list stmt .

    $default  reduce using rule 16 (stmt_list)


State 69

   32 expr: '(' expr ')' .

    $default  reduce using rule 32 (expr)


State 70

   20 expr: expr . INC
   21     | expr . DEC
   22     | expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   28     | expr GE expr .
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    INC  shift, and go to state 56
    DEC  shift, and go to state 57

    $default  reduce using rule 28 (expr)


State 71

   20 expr: expr . INC
   21     | expr . DEC
   22     | expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   29     | expr LE expr .
   30     | expr . NE expr
   31     | expr . EQ expr

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    INC  shift, and go to state 56
    DEC  shift, and go to state 57

    $default  reduce using rule 29 (expr)


State 72

   20 expr: expr . INC
   21     | expr . DEC
   22     | expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr
   31     | expr EQ expr .

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    INC  shift, and go to state 56
    DEC  shift, and go to state 57

    $default  reduce using rule 31 (expr)


State 73

   20 expr: expr . INC
   21     | expr . DEC
   22     | expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   30     | expr NE expr .
   31     | expr . EQ expr

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    INC  shift, and go to state 56
    DEC  shift, and go to state 57

    $default  reduce using rule 30 (expr)


State 74

   20 expr: expr . INC
   21     | expr . DEC
   22     | expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   27     | expr '>' expr .
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    INC  shift, and go to state 56
    DEC  shift, and go to state 57

    $default  reduce using rule 27 (expr)


State 75

   20 expr: expr . INC
   21     | expr . DEC
   22     | expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   26     | expr '<' expr .
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    INC  shift, and go to state 56
    DEC  shift, and go to state 57

    $default  reduce using rule 26 (expr)


State 76

   20 expr: expr . INC
   21     | expr . DEC
   22     | expr . '+' expr
   22     | expr '+' expr .
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    INC  shift, and go to state 56
    DEC  shift, and go to state 57

    $default  reduce using rule 22 (expr)


State 77

   20 expr: expr . INC
   21     | expr . DEC
   22     | expr . '+' expr
   23     | expr . '-' expr
   23     | expr '-' expr .
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    INC  shift, and go to state 56
    DEC  shift, and go to state 57

    $default  reduce using rule 23 (expr)


State 78

   20 expr: expr . INC
   21     | expr . DEC
   22     | expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   24     | expr '*' expr .
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    INC  shift, and go to state 56
    DEC  shift, and go to state 57

    $default  reduce using rule 24 (expr)


State 79

   20 expr: expr . INC
   21     | expr . DEC
   22     | expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   25     | expr '/' expr .
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    INC  shift, and go to state 56
    DEC  shift, and go to state 57

    $default  reduce using rule 25 (expr)


State 80

    6 stmt: VARIABLE '=' expr ';' .

    $default  reduce using rule 6 (stmt)


State 81

    7 stmt: WHILE '(' expr ')' . stmt

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    WHILE     shift, and go to state 20
    IF        shift, and go to state 21
    PRINT     shift, and go to state 22
    FOR       shift, and go to state 23
    INT       shift, and go to state 24
    FLOAT     shift, and go to state 25
    CHAR      shift, and go to state 26
    '-'       shift, and go to state 27
    '{'       shift, and go to state 28
    '('       shift, and go to state 29
    ';'       shift, and go to state 30

    stmt  go to state 84
    expr  go to state 32


State 82

    9 stmt: IF '(' expr ')' . stmt
   10     | IF '(' expr ')' . stmt ELSE stmt

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    WHILE     shift, and go to state 20
    IF        shift, and go to state 21
    PRINT     shift, and go to state 22
    FOR       shift, and go to state 23
    INT       shift, and go to state 24
    FLOAT     shift, and go to state 25
    CHAR      shift, and go to state 26
    '-'       shift, and go to state 27
    '{'       shift, and go to state 28
    '('       shift, and go to state 29
    ';'       shift, and go to state 30

    stmt  go to state 85
    expr  go to state 32


State 83

    8 stmt: FOR '(' stmt stmt . expr ')' stmt

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 36
    '-'       shift, and go to state 27
    '('       shift, and go to state 29

    expr  go to state 86


State 84

    7 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 7 (stmt)


State 85

    9 stmt: IF '(' expr ')' stmt .
   10     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 87

    $default  reduce using rule 9 (stmt)


State 86

    8 stmt: FOR '(' stmt stmt expr . ')' stmt
   20 expr: expr . INC
   21     | expr . DEC
   22     | expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . GE expr
   29     | expr . LE expr
   30     | expr . NE expr
   31     | expr . EQ expr

    GE   shift, and go to state 46
    LE   shift, and go to state 47
    EQ   shift, and go to state 48
    NE   shift, and go to state 49
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    INC  shift, and go to state 56
    DEC  shift, and go to state 57
    ')'  shift, and go to state 88


State 87

   10 stmt: IF '(' expr ')' stmt ELSE . stmt

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    WHILE     shift, and go to state 20
    IF        shift, and go to state 21
    PRINT     shift, and go to state 22
    FOR       shift, and go to state 23
    INT       shift, and go to state 24
    FLOAT     shift, and go to state 25
    CHAR      shift, and go to state 26
    '-'       shift, and go to state 27
    '{'       shift, and go to state 28
    '('       shift, and go to state 29
    ';'       shift, and go to state 30

    stmt  go to state 89
    expr  go to state 32


State 88

    8 stmt: FOR '(' stmt stmt expr ')' . stmt

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    WHILE     shift, and go to state 20
    IF        shift, and go to state 21
    PRINT     shift, and go to state 22
    FOR       shift, and go to state 23
    INT       shift, and go to state 24
    FLOAT     shift, and go to state 25
    CHAR      shift, and go to state 26
    '-'       shift, and go to state 27
    '{'       shift, and go to state 28
    '('       shift, and go to state 29
    ';'       shift, and go to state 30

    stmt  go to state 90
    expr  go to state 32


State 89

   10 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 10 (stmt)


State 90

    8 stmt: FOR '(' stmt stmt expr ')' stmt .

    $default  reduce using rule 8 (stmt)
