Grammar

    0 $accept: program $end

    1 program: CLASS ID '{' BODY '}'

    2 BODY: access_specifier STATIC type_const MAIN '(' type_const '[' ']' ID ')' stmt

    3 stmt: ';'
    4     | expr ';'
    5     | PRINT expr ';'
    6     | VARIABLE '=' expr ';'
    7     | WHILE '(' expr ')' stmt
    8     | FOR '(' stmt stmt expr ')' stmt
    9     | IF '(' expr ')' stmt
   10     | IF '(' expr ')' stmt ELSE stmt
   11     | '{' stmt_list '}'

   12 stmt_list: stmt
   13          | stmt_list stmt

   14 expr: INTEGER
   15     | VARIABLE
   16     | '-' expr
   17     | expr INC
   18     | expr DEC
   19     | expr '+' expr
   20     | expr '-' expr
   21     | expr '*' expr
   22     | expr '/' expr
   23     | expr '<' expr
   24     | expr '>' expr
   25     | expr GE expr
   26     | expr LE expr
   27     | expr NE expr
   28     | expr EQ expr
   29     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 2 7 8 9 10 29
')' (41) 2 7 8 9 10 29
'*' (42) 21
'+' (43) 19
'-' (45) 16 20
'/' (47) 22
';' (59) 3 4 5 6
'<' (60) 23
'=' (61) 6
'>' (62) 24
'[' (91) 2
']' (93) 2
'{' (123) 1 11
'}' (125) 1 11
error (256)
INTEGER (258) 14
STATIC (259) 2
MAIN (260) 2
CLASS (261) 1
access_specifier (262) 2
ID (263) 1 2
type_const (264) 2
VARIABLE (265) 6 15
WHILE (266) 7
IF (267) 9 10
PRINT (268) 5
FOR (269) 8
IFX (270)
ELSE (271) 10
GE (272) 25
LE (273) 26
EQ (274) 28
NE (275) 27
UMINUS (276)
INC (277) 17
DEC (278) 18


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1, on right: 0
BODY (40)
    on left: 2, on right: 1
stmt (41)
    on left: 3 4 5 6 7 8 9 10 11, on right: 2 7 8 9 10 12 13
stmt_list (42)
    on left: 12 13, on right: 11 13
expr (43)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29, on right:
    4 5 6 7 8 9 10 16 17 18 19 20 21 22 23 24 25 26 27 28 29


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program  go to state 2


State 1

    1 program: CLASS . ID '{' BODY '}'

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: CLASS ID . '{' BODY '}'

    '{'  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: CLASS ID '{' . BODY '}'

    access_specifier  shift, and go to state 6

    BODY  go to state 7


State 6

    2 BODY: access_specifier . STATIC type_const MAIN '(' type_const '[' ']' ID ')' stmt

    STATIC  shift, and go to state 8


State 7

    1 program: CLASS ID '{' BODY . '}'

    '}'  shift, and go to state 9


State 8

    2 BODY: access_specifier STATIC . type_const MAIN '(' type_const '[' ']' ID ')' stmt

    type_const  shift, and go to state 10


State 9

    1 program: CLASS ID '{' BODY '}' .

    $default  reduce using rule 1 (program)


State 10

    2 BODY: access_specifier STATIC type_const . MAIN '(' type_const '[' ']' ID ')' stmt

    MAIN  shift, and go to state 11


State 11

    2 BODY: access_specifier STATIC type_const MAIN . '(' type_const '[' ']' ID ')' stmt

    '('  shift, and go to state 12


State 12

    2 BODY: access_specifier STATIC type_const MAIN '(' . type_const '[' ']' ID ')' stmt

    type_const  shift, and go to state 13


State 13

    2 BODY: access_specifier STATIC type_const MAIN '(' type_const . '[' ']' ID ')' stmt

    '['  shift, and go to state 14


State 14

    2 BODY: access_specifier STATIC type_const MAIN '(' type_const '[' . ']' ID ')' stmt

    ']'  shift, and go to state 15


State 15

    2 BODY: access_specifier STATIC type_const MAIN '(' type_const '[' ']' . ID ')' stmt

    ID  shift, and go to state 16


State 16

    2 BODY: access_specifier STATIC type_const MAIN '(' type_const '[' ']' ID . ')' stmt

    ')'  shift, and go to state 17


State 17

    2 BODY: access_specifier STATIC type_const MAIN '(' type_const '[' ']' ID ')' . stmt

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    WHILE     shift, and go to state 20
    IF        shift, and go to state 21
    PRINT     shift, and go to state 22
    FOR       shift, and go to state 23
    '-'       shift, and go to state 24
    '{'       shift, and go to state 25
    '('       shift, and go to state 26
    ';'       shift, and go to state 27

    stmt  go to state 28
    expr  go to state 29


State 18

   14 expr: INTEGER .

    $default  reduce using rule 14 (expr)


State 19

    6 stmt: VARIABLE . '=' expr ';'
   15 expr: VARIABLE .

    '='  shift, and go to state 30

    $default  reduce using rule 15 (expr)


State 20

    7 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 31


State 21

    9 stmt: IF . '(' expr ')' stmt
   10     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 32


State 22

    5 stmt: PRINT . expr ';'

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 33
    '-'       shift, and go to state 24
    '('       shift, and go to state 26

    expr  go to state 34


State 23

    8 stmt: FOR . '(' stmt stmt expr ')' stmt

    '('  shift, and go to state 35


State 24

   16 expr: '-' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 33
    '-'       shift, and go to state 24
    '('       shift, and go to state 26

    expr  go to state 36


State 25

   11 stmt: '{' . stmt_list '}'

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    WHILE     shift, and go to state 20
    IF        shift, and go to state 21
    PRINT     shift, and go to state 22
    FOR       shift, and go to state 23
    '-'       shift, and go to state 24
    '{'       shift, and go to state 25
    '('       shift, and go to state 26
    ';'       shift, and go to state 27

    stmt       go to state 37
    stmt_list  go to state 38
    expr       go to state 29


State 26

   29 expr: '(' . expr ')'

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 33
    '-'       shift, and go to state 24
    '('       shift, and go to state 26

    expr  go to state 39


State 27

    3 stmt: ';' .

    $default  reduce using rule 3 (stmt)


State 28

    2 BODY: access_specifier STATIC type_const MAIN '(' type_const '[' ']' ID ')' stmt .

    $default  reduce using rule 2 (BODY)


State 29

    4 stmt: expr . ';'
   17 expr: expr . INC
   18     | expr . DEC
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    GE   shift, and go to state 40
    LE   shift, and go to state 41
    EQ   shift, and go to state 42
    NE   shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    ';'  shift, and go to state 52


State 30

    6 stmt: VARIABLE '=' . expr ';'

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 33
    '-'       shift, and go to state 24
    '('       shift, and go to state 26

    expr  go to state 53


State 31

    7 stmt: WHILE '(' . expr ')' stmt

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 33
    '-'       shift, and go to state 24
    '('       shift, and go to state 26

    expr  go to state 54


State 32

    9 stmt: IF '(' . expr ')' stmt
   10     | IF '(' . expr ')' stmt ELSE stmt

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 33
    '-'       shift, and go to state 24
    '('       shift, and go to state 26

    expr  go to state 55


State 33

   15 expr: VARIABLE .

    $default  reduce using rule 15 (expr)


State 34

    5 stmt: PRINT expr . ';'
   17 expr: expr . INC
   18     | expr . DEC
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    GE   shift, and go to state 40
    LE   shift, and go to state 41
    EQ   shift, and go to state 42
    NE   shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    ';'  shift, and go to state 56


State 35

    8 stmt: FOR '(' . stmt stmt expr ')' stmt

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    WHILE     shift, and go to state 20
    IF        shift, and go to state 21
    PRINT     shift, and go to state 22
    FOR       shift, and go to state 23
    '-'       shift, and go to state 24
    '{'       shift, and go to state 25
    '('       shift, and go to state 26
    ';'       shift, and go to state 27

    stmt  go to state 57
    expr  go to state 29


State 36

   16 expr: '-' expr .
   17     | expr . INC
   18     | expr . DEC
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    INC  error (nonassociative)
    DEC  error (nonassociative)

    $default  reduce using rule 16 (expr)


State 37

   12 stmt_list: stmt .

    $default  reduce using rule 12 (stmt_list)


State 38

   11 stmt: '{' stmt_list . '}'
   13 stmt_list: stmt_list . stmt

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    WHILE     shift, and go to state 20
    IF        shift, and go to state 21
    PRINT     shift, and go to state 22
    FOR       shift, and go to state 23
    '-'       shift, and go to state 24
    '{'       shift, and go to state 25
    '}'       shift, and go to state 58
    '('       shift, and go to state 26
    ';'       shift, and go to state 27

    stmt  go to state 59
    expr  go to state 29


State 39

   17 expr: expr . INC
   18     | expr . DEC
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr
   29     | '(' expr . ')'

    GE   shift, and go to state 40
    LE   shift, and go to state 41
    EQ   shift, and go to state 42
    NE   shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    ')'  shift, and go to state 60


State 40

   25 expr: expr GE . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 33
    '-'       shift, and go to state 24
    '('       shift, and go to state 26

    expr  go to state 61


State 41

   26 expr: expr LE . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 33
    '-'       shift, and go to state 24
    '('       shift, and go to state 26

    expr  go to state 62


State 42

   28 expr: expr EQ . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 33
    '-'       shift, and go to state 24
    '('       shift, and go to state 26

    expr  go to state 63


State 43

   27 expr: expr NE . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 33
    '-'       shift, and go to state 24
    '('       shift, and go to state 26

    expr  go to state 64


State 44

   24 expr: expr '>' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 33
    '-'       shift, and go to state 24
    '('       shift, and go to state 26

    expr  go to state 65


State 45

   23 expr: expr '<' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 33
    '-'       shift, and go to state 24
    '('       shift, and go to state 26

    expr  go to state 66


State 46

   19 expr: expr '+' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 33
    '-'       shift, and go to state 24
    '('       shift, and go to state 26

    expr  go to state 67


State 47

   20 expr: expr '-' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 33
    '-'       shift, and go to state 24
    '('       shift, and go to state 26

    expr  go to state 68


State 48

   21 expr: expr '*' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 33
    '-'       shift, and go to state 24
    '('       shift, and go to state 26

    expr  go to state 69


State 49

   22 expr: expr '/' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 33
    '-'       shift, and go to state 24
    '('       shift, and go to state 26

    expr  go to state 70


State 50

   17 expr: expr INC .

    $default  reduce using rule 17 (expr)


State 51

   18 expr: expr DEC .

    $default  reduce using rule 18 (expr)


State 52

    4 stmt: expr ';' .

    $default  reduce using rule 4 (stmt)


State 53

    6 stmt: VARIABLE '=' expr . ';'
   17 expr: expr . INC
   18     | expr . DEC
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    GE   shift, and go to state 40
    LE   shift, and go to state 41
    EQ   shift, and go to state 42
    NE   shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    ';'  shift, and go to state 71


State 54

    7 stmt: WHILE '(' expr . ')' stmt
   17 expr: expr . INC
   18     | expr . DEC
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    GE   shift, and go to state 40
    LE   shift, and go to state 41
    EQ   shift, and go to state 42
    NE   shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    ')'  shift, and go to state 72


State 55

    9 stmt: IF '(' expr . ')' stmt
   10     | IF '(' expr . ')' stmt ELSE stmt
   17 expr: expr . INC
   18     | expr . DEC
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    GE   shift, and go to state 40
    LE   shift, and go to state 41
    EQ   shift, and go to state 42
    NE   shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    ')'  shift, and go to state 73


State 56

    5 stmt: PRINT expr ';' .

    $default  reduce using rule 5 (stmt)


State 57

    8 stmt: FOR '(' stmt . stmt expr ')' stmt

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    WHILE     shift, and go to state 20
    IF        shift, and go to state 21
    PRINT     shift, and go to state 22
    FOR       shift, and go to state 23
    '-'       shift, and go to state 24
    '{'       shift, and go to state 25
    '('       shift, and go to state 26
    ';'       shift, and go to state 27

    stmt  go to state 74
    expr  go to state 29


State 58

   11 stmt: '{' stmt_list '}' .

    $default  reduce using rule 11 (stmt)


State 59

   13 stmt_list: stmt_list stmt .

    $default  reduce using rule 13 (stmt_list)


State 60

   29 expr: '(' expr ')' .

    $default  reduce using rule 29 (expr)


State 61

   17 expr: expr . INC
   18     | expr . DEC
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   25     | expr GE expr .
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 25 (expr)


State 62

   17 expr: expr . INC
   18     | expr . DEC
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   26     | expr LE expr .
   27     | expr . NE expr
   28     | expr . EQ expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 26 (expr)


State 63

   17 expr: expr . INC
   18     | expr . DEC
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr
   28     | expr EQ expr .

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 28 (expr)


State 64

   17 expr: expr . INC
   18     | expr . DEC
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   27     | expr NE expr .
   28     | expr . EQ expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 27 (expr)


State 65

   17 expr: expr . INC
   18     | expr . DEC
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   24     | expr '>' expr .
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 24 (expr)


State 66

   17 expr: expr . INC
   18     | expr . DEC
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   23     | expr '<' expr .
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 23 (expr)


State 67

   17 expr: expr . INC
   18     | expr . DEC
   19     | expr . '+' expr
   19     | expr '+' expr .
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 19 (expr)


State 68

   17 expr: expr . INC
   18     | expr . DEC
   19     | expr . '+' expr
   20     | expr . '-' expr
   20     | expr '-' expr .
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 20 (expr)


State 69

   17 expr: expr . INC
   18     | expr . DEC
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   21     | expr '*' expr .
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 21 (expr)


State 70

   17 expr: expr . INC
   18     | expr . DEC
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   22     | expr '/' expr .
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 22 (expr)


State 71

    6 stmt: VARIABLE '=' expr ';' .

    $default  reduce using rule 6 (stmt)


State 72

    7 stmt: WHILE '(' expr ')' . stmt

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    WHILE     shift, and go to state 20
    IF        shift, and go to state 21
    PRINT     shift, and go to state 22
    FOR       shift, and go to state 23
    '-'       shift, and go to state 24
    '{'       shift, and go to state 25
    '('       shift, and go to state 26
    ';'       shift, and go to state 27

    stmt  go to state 75
    expr  go to state 29


State 73

    9 stmt: IF '(' expr ')' . stmt
   10     | IF '(' expr ')' . stmt ELSE stmt

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    WHILE     shift, and go to state 20
    IF        shift, and go to state 21
    PRINT     shift, and go to state 22
    FOR       shift, and go to state 23
    '-'       shift, and go to state 24
    '{'       shift, and go to state 25
    '('       shift, and go to state 26
    ';'       shift, and go to state 27

    stmt  go to state 76
    expr  go to state 29


State 74

    8 stmt: FOR '(' stmt stmt . expr ')' stmt

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 33
    '-'       shift, and go to state 24
    '('       shift, and go to state 26

    expr  go to state 77


State 75

    7 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 7 (stmt)


State 76

    9 stmt: IF '(' expr ')' stmt .
   10     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 78

    $default  reduce using rule 9 (stmt)


State 77

    8 stmt: FOR '(' stmt stmt expr . ')' stmt
   17 expr: expr . INC
   18     | expr . DEC
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    GE   shift, and go to state 40
    LE   shift, and go to state 41
    EQ   shift, and go to state 42
    NE   shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    ')'  shift, and go to state 79


State 78

   10 stmt: IF '(' expr ')' stmt ELSE . stmt

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    WHILE     shift, and go to state 20
    IF        shift, and go to state 21
    PRINT     shift, and go to state 22
    FOR       shift, and go to state 23
    '-'       shift, and go to state 24
    '{'       shift, and go to state 25
    '('       shift, and go to state 26
    ';'       shift, and go to state 27

    stmt  go to state 80
    expr  go to state 29


State 79

    8 stmt: FOR '(' stmt stmt expr ')' . stmt

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    WHILE     shift, and go to state 20
    IF        shift, and go to state 21
    PRINT     shift, and go to state 22
    FOR       shift, and go to state 23
    '-'       shift, and go to state 24
    '{'       shift, and go to state 25
    '('       shift, and go to state 26
    ';'       shift, and go to state 27

    stmt  go to state 81
    expr  go to state 29


State 80

   10 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 10 (stmt)


State 81

    8 stmt: FOR '(' stmt stmt expr ')' stmt .

    $default  reduce using rule 8 (stmt)
